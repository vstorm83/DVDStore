<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">
    <!--channelProcessingFilter,
    concurrentSessionFilter,
    httpSessionIntergrationFilter,
    logoutFilter,
    authenticationProcessingFilter,
    rememberMeProcessingFilter,
    exceptionTranslationFilter,
    filterSecurityInterceptor-->
    <bean id="securityFilterChain" class="org.springframework.security.util.FilterChainProxy" >
        <security:filter-chain-map path-type="ant" >
            <security:filter-chain pattern="/**" filters="concurrentSessionFilter,
                                   httpSessionIntergrationFilter,
                                   logoutFilter,
                                   authenticationProcessingFilter,
                                   exceptionTranslationFilter,
                                   filterSecurityInterceptor"/>
        </security:filter-chain-map>
    </bean>
    
    <!--Cần có HttpSessionEventPublisher cài trong web.xml
        Nếu có RememberMe thì cài forceEagerSessionCreation
        Nếu có LogoutFilter thì cài logoutHandler
    -->
    <bean id="concurrentSessionFilter" class="org.springframework.security.concurrent.ConcurrentSessionFilter" >
        <property name="expiredUrl" value="/" />
        <property name="sessionRegistry" ref="sessionRegistry" />
        <property name="logoutHandlers">
            <list>
                <ref bean="securityContextLogoutHandler" />
            </list>
        </property>
    </bean>
    <bean id="sessionRegistry" class="org.springframework.security.concurrent.SessionRegistryImpl" />
    <!--Nhớ cài vào AuthenticationManager (ProviderManage) -->
    <bean id="concurrentSessionController" class="org.springframework.security.concurrent.ConcurrentSessionControllerImpl" >
        <property name="maximumSessions" value="1" />
        <property name="sessionRegistry" ref="sessionRegistry" />
    </bean>

    <!--Khi sử dụng RememberMeService chung với concurrentSessionFilter cần đặt forceEagerSessionCreation-->
    <bean id="httpSessionIntergrationFilter" class="org.springframework.security.context.HttpSessionContextIntegrationFilter" >
        <property name="forceEagerSessionCreation" value="true" />
    </bean>

    <!--RememberMeServies để ghi Cookie nếu có yêu cầu Login trực tiếp-->
    <bean id="authenticationProcessingFilter" class="org.springframework.security.ui.webapp.AuthenticationProcessingFilter" >
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="authenticationFailureUrl" value="/user/Login.htm?errCode=0" />
        <property name="defaultTargetUrl" value="/" />
        <property name="filterProcessesUrl" value="/j_spring_security_check" />
        <property name="usernameParameter" value="j_username" />
        <property name="passwordParameter" value="j_password" />

        <!--Đưa vào xử lý trong namespace engine, do position là ns engine quyết định-->
        <!--<security:custom-filter position="AUTHENTICATION_PROCESSING_FILTER" />-->
    </bean>

    <bean id="exceptionTranslationFilter" class="org.springframework.security.ui.ExceptionTranslationFilter" >
        <property name="accessDeniedHandler" >
            <bean class="org.springframework.security.ui.AccessDeniedHandlerImpl" >
                <property name="errorPage" value="/user/Login.htm?errCode=1" />
            </bean>
        </property>
        <property name="authenticationEntryPoint">
            <!--BasicProcessingFilterEntryPoint, X509ProcessingFilterEntryPoint-->
            <bean class="org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint" >
                <property name="loginFormUrl" value="/user/Login.htm?errCode=1" />
                <!--<property name="forceHttps" value="true" />-->
            </bean>
        </property>
    </bean>

    <bean id="filterSecurityInterceptor" class="org.springframework.security.intercept.web.FilterSecurityInterceptor" >
        <property name="accessDecisionManager" ref="accessDecisionManager" />
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="objectDefinitionSource" >
            <value>
                CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
                PATTERN_TYPE_APACHE_ANT
                /movie/placeorder*=PERMIT_Customer
                /user/deliveryinfomodify*=PERMIT_Customer
                /user/credentialsmodify*=PERMIT_Customer
            </value>
        </property>
        <property name="alwaysReauthenticate" value="false" />
        <!--<property name="messageSource" ref="" />-->
    </bean>

    <!--rememberMeAuthenticationProvider để rememberMeProccessingFilter đăng nhập-->
    <bean id="authenticationManager" class="org.springframework.security.providers.ProviderManager" >
        <property name="providers" >
            <list>
                <ref bean="daoAuthenticationProvider" />
                <!--<ref bean="jaasAuthenticationProvider" />-->
                <!--<ref bean="anonimousAuthenticationProvider" />-->
                <!--<ref bean="rememberMeAuthenticationProvider" />-->
                <!--<ref bean="remoteAuthenticationProvider" />-->
                <!--<ref bean="x509AuthenticationProvider" />-->
            </list>
        </property>
        <!--sessionController để cập nhật sessionRegistry cho concurrentSessionFilter-->
        <property name="sessionController" ref="concurrentSessionController" />
    </bean>
    <bean id="daoAuthenticationProvider" class="org.springframework.security.providers.dao.DaoAuthenticationProvider" >
        <property name="userDetailsService" ref="dsUserService" />
        <property name="hideUserNotFoundExceptions" value="true" />
        <property name="passwordEncoder" ref="md5PasswordEncoder" />
        <property name="saltSource" >
            <bean class="org.springframework.security.providers.dao.salt.ReflectionSaltSource">
                <property name="userPropertyToUse" value="username" />
            </bean>
            <!--<bean class="org.springframework.security.providers.dao.salt.SystemWideSaltSource">
                <property name="systemWideSalt" value="123" />
            </bean>-->
        </property>
        <!--<property name="messageSource" ref="messageSource" />-->
    </bean>

    <bean id="accessDecisionManager" class="org.springframework.security.vote.UnanimousBased" >
        <property name="decisionVoters" >
            <list>
                <ref bean="roleVoter" />
            </list>
        </property>
        <!--<property name="messageSource" ref="" />-->
    </bean>
    <bean id="roleVoter" class="org.springframework.security.vote.RoleVoter" >
        <property name="rolePrefix" value="PERMIT" />
    </bean>

    <bean id="md5PasswordEncoder" class="org.springframework.security.providers.encoding.Md5PasswordEncoder" >
        <property name="encodeHashAsBase64" value="true" />
    </bean>

    <bean id="logoutFilter" class="org.springframework.security.ui.logout.LogoutFilter" >
        <constructor-arg value="/" />
        <constructor-arg >
            <list>
                <ref bean="securityContextLogoutHandler" />
            </list>
        </constructor-arg>
        <property name="filterProcessesUrl" value="/j_spring_security_logout" />
    </bean>
    <!--Nhớ cài cho cả concurrentSessionFilter-->
    <bean id="securityContextLogoutHandler" class="org.springframework.security.ui.logout.SecurityContextLogoutHandler" />

</beans>